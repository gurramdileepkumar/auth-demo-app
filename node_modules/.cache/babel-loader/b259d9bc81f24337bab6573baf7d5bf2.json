{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gurra\\\\OneDrive\\\\Desktop\\\\auth-demo-app\\\\src\\\\components\\\\Auth\\\\AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from 'react';\nimport classes from './AuthForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = () => {\n  _s();\n\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const emailRef = useRef();\n  const passwordRef = useRef();\n\n  const switchAuthModeHandler = e => {\n    setIsLogin(prevState => !prevState);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const enteredEmail = emailRef.current.value;\n    const enteredPassword = passwordRef.current.value; // console.log(emailRef.current.value);\n    // console.log(passwordRef.current.value);\n\n    if (isLogin) {//logic for signin\n    } else {\n      //logic for signup(register)\n      fetch('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCnX2BY1cIpsHi24sP5Nprg1sAnUS-IS9w', {\n        method: \"POST\",\n        body: JSON.stringify({\n          email: enteredEmail,\n          password: enteredPassword,\n          returnSecureToken: true\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => {\n        if (res.ok) {//res is ok :show success message, redirecting to some other page\n        } else {\n          return res.json().then(data => {\n            console.log(data);\n            let errorMessage = \"Authentication Failed\";\n\n            if (data && data.error && data.error.message) {\n              errorMessage = data.error.message;\n            }\n\n            alert(errorMessage);\n          });\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? 'Login' : 'Sign Up'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          required: true,\n          ref: emailRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          required: true,\n          ref: passwordRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? 'Login' : 'Create Account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? 'Create new account' : 'Login with existing account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthForm, \"rfKYzMbfWdM/ZxerEO0nqEH9An8=\");\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["useState","useRef","classes","AuthForm","isLogin","setIsLogin","isLoading","setIsLoading","emailRef","passwordRef","switchAuthModeHandler","e","prevState","submitHandler","preventDefault","enteredEmail","current","value","enteredPassword","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","then","res","ok","json","data","console","log","errorMessage","error","message","alert","auth","control","actions","toggle"],"sources":["C:/Users/gurra/OneDrive/Desktop/auth-demo-app/src/components/Auth/AuthForm.js"],"sourcesContent":["import { useState,useRef } from 'react';\nimport classes from './AuthForm.module.css';\n\nconst AuthForm = () => {\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading,setIsLoading]=useState(false);\n const emailRef=useRef();\n const passwordRef=useRef()\n\n \n  const switchAuthModeHandler = (e) => {\n    setIsLogin((prevState) => !prevState);\n\n  };\n  const submitHandler=(e)=>{\n    e.preventDefault();\n    const enteredEmail=emailRef.current.value;\n    const enteredPassword=passwordRef.current.value;\n\n    // console.log(emailRef.current.value);\n    // console.log(passwordRef.current.value);\n\n    if(isLogin){\n       //logic for signin\n    }\n    else{\n      //logic for signup(register)\n      fetch(\n        'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCnX2BY1cIpsHi24sP5Nprg1sAnUS-IS9w',\n        {\n          method: \"POST\",\n          body: JSON.stringify({\n            email: enteredEmail,\n            password: enteredPassword,\n            returnSecureToken: true,\n          }),\n          headers: { \"Content-Type\": \"application/json\" },\n        }\n      ).then((res) => {\n        if(res.ok){\n        //res is ok :show success message, redirecting to some other page\n\n        }\n        else{\n          return res.json().then((data)=>{\n            console.log(data);\n            let errorMessage=\"Authentication Failed\"\n            if(data && data.error && data.error.message){\n              errorMessage = data.error.message;\n            }\n            alert(errorMessage);\n          })\n        }\n    } )\n  }\n}\n\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor='email'>Your Email</label>\n          <input type='email' id='email' required  ref={emailRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='password'>Your Password</label>\n          <input type='password' id='password' required  ref={passwordRef}/>\n        </div>\n        <div className={classes.actions}>\n          <button>{isLogin ? 'Login' : 'Create Account'}</button>\n          <button\n            type='button'\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? 'Create new account' : 'Login with existing account'}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAkBC,MAAlB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,uBAApB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACrB,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,IAAD,CAAtC;EACA,MAAM,CAACM,SAAD,EAAWC,YAAX,IAAyBP,QAAQ,CAAC,KAAD,CAAvC;EACD,MAAMQ,QAAQ,GAACP,MAAM,EAArB;EACA,MAAMQ,WAAW,GAACR,MAAM,EAAxB;;EAGC,MAAMS,qBAAqB,GAAIC,CAAD,IAAO;IACnCN,UAAU,CAAEO,SAAD,IAAe,CAACA,SAAjB,CAAV;EAED,CAHD;;EAIA,MAAMC,aAAa,GAAEF,CAAD,IAAK;IACvBA,CAAC,CAACG,cAAF;IACA,MAAMC,YAAY,GAACP,QAAQ,CAACQ,OAAT,CAAiBC,KAApC;IACA,MAAMC,eAAe,GAACT,WAAW,CAACO,OAAZ,CAAoBC,KAA1C,CAHuB,CAKvB;IACA;;IAEA,IAAGb,OAAH,EAAW,CACR;IACF,CAFD,MAGI;MACF;MACAe,KAAK,CACH,uGADG,EAEH;QACEC,MAAM,EAAE,MADV;QAEEC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;UACnBC,KAAK,EAAET,YADY;UAEnBU,QAAQ,EAAEP,eAFS;UAGnBQ,iBAAiB,EAAE;QAHA,CAAf,CAFR;QAOEC,OAAO,EAAE;UAAE,gBAAgB;QAAlB;MAPX,CAFG,CAAL,CAWEC,IAXF,CAWQC,GAAD,IAAS;QACd,IAAGA,GAAG,CAACC,EAAP,EAAU,CACV;QAEC,CAHD,MAII;UACF,OAAOD,GAAG,CAACE,IAAJ,GAAWH,IAAX,CAAiBI,IAAD,IAAQ;YAC7BC,OAAO,CAACC,GAAR,CAAYF,IAAZ;YACA,IAAIG,YAAY,GAAC,uBAAjB;;YACA,IAAGH,IAAI,IAAIA,IAAI,CAACI,KAAb,IAAsBJ,IAAI,CAACI,KAAL,CAAWC,OAApC,EAA4C;cAC1CF,YAAY,GAAGH,IAAI,CAACI,KAAL,CAAWC,OAA1B;YACD;;YACDC,KAAK,CAACH,YAAD,CAAL;UACD,CAPM,CAAP;QAQD;MACJ,CA1BC;IA2BH;EACF,CAzCC;;EA4CA,oBACE;IAAS,SAAS,EAAEjC,OAAO,CAACqC,IAA5B;IAAA,wBACE;MAAA,UAAKnC,OAAO,GAAG,OAAH,GAAa;IAAzB;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAM,QAAQ,EAAES,aAAhB;MAAA,wBACE;QAAK,SAAS,EAAEX,OAAO,CAACsC,OAAxB;QAAA,wBACE;UAAO,OAAO,EAAC,OAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAO,IAAI,EAAC,OAAZ;UAAoB,EAAE,EAAC,OAAvB;UAA+B,QAAQ,MAAvC;UAAyC,GAAG,EAAEhC;QAA9C;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAKE;QAAK,SAAS,EAAEN,OAAO,CAACsC,OAAxB;QAAA,wBACE;UAAO,OAAO,EAAC,UAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAO,IAAI,EAAC,UAAZ;UAAuB,EAAE,EAAC,UAA1B;UAAqC,QAAQ,MAA7C;UAA+C,GAAG,EAAE/B;QAApD;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QALF,eASE;QAAK,SAAS,EAAEP,OAAO,CAACuC,OAAxB;QAAA,wBACE;UAAA,UAASrC,OAAO,GAAG,OAAH,GAAa;QAA7B;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UACE,IAAI,EAAC,QADP;UAEE,SAAS,EAAEF,OAAO,CAACwC,MAFrB;UAGE,OAAO,EAAEhC,qBAHX;UAAA,UAKGN,OAAO,GAAG,oBAAH,GAA0B;QALpC;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QATF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAyBD,CAhFD;;GAAMD,Q;;KAAAA,Q;AAkFN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}